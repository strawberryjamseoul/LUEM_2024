<<<<<<< Updated upstream
inundation <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_depe.csv")
slope <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_slope.csv")
slope <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_slope.csv")
=======
geom_sf(data=joined_fishnet_cal  %>%
filter(flood == 1),
fill="#de2d26",colour=NA) +
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
mapTheme +
labs(title="Predicted Probabilities and Past Flood Inundation",
subtitle="Calgary; Past Flood Inundation in red",
caption = "Figure 4.2")
##Confusion Matrix Map
joined_fishnet_cal %>%
mutate(confResult=case_when(allPredictions < 50 & flood==0 ~ "True Negative",
allPredictions >= 50 & flood==1 ~ "True Positive",
allPredictions < 50 & flood==1 ~ "False Negative",
allPredictions >= 50 & flood==0 ~ "False Positive")) %>%
ggplot()+
geom_sf(aes(fill = confResult), color = "transparent")+
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_manual(values = c("Red","Orange","Light Blue","Light Green"),
name="Outcomes")+
labs(title="Confusion Matrix Map",
caption = "Figure 4.3") +
mapTheme
>>>>>>> 75b1c4b0033f6302d7cb1081e1a0720bb886ca35
>>>>>>> Stashed changes
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(pscl)
library(plotROC)
library(pROC)
library(sf)
library(tidyverse)
library(knitr)
library(kableExtra)
library(tigris)
library(viridis)
library(ggplot2)
mapTheme <- theme(plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_line(colour = 'transparent'),
panel.grid.minor=element_blank(),
legend.direction = "vertical",
legend.position = "right",
plot.margin = margin(1, 1, 1, 1, 'cm'),
legend.key.height = unit(1, "cm"), legend.key.width = unit(0.2, "cm"))
plotTheme <- theme(
plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
# Set the entire chart region to blank
panel.background=element_blank(),
plot.background=element_blank(),
#panel.border=element_rect(colour="#F0F0F0"),
# Format the grid
panel.grid.major=element_line(colour="#D0D0D0",size=.75),
axis.ticks=element_blank())
# dependent variable
inundation <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_depe.csv")
<<<<<<< Updated upstream
=======
=======
# dependent variable
inundation <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_depe.csv")
inundation <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_depe.csv")
elevation <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_elev.csv")
flow_acc <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_fac.csv")
land_use <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_lulc.csv")
land_use <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_lulc.csv")
slope <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_slope.csv")
slope <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_slope.csv")
water_body <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_water.csv")
calgary_fishnet<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Calgary_JSON/Calgary_Fishnet.json")
calgary_fishnet<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Calgary_JSON/Calgary_Fishnet.json")
calgary_fishnet<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Calgary_JSON/Calgary_Fishnet.json")
calgary_boundary<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Calgary_JSON/Calgary_Boundary.json")
calgary_boundary<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Calgary_JSON/Calgary_Boundary.json")
calgary_Floods <- calgary_fishnet %>%
left_join(inundation, by = "FID")
calgary_Floods$RANGE<-as.factor(calgary_Floods$RANGE)
ggplot() +
geom_sf(data=calgary_fishnet,color="grey",size=0.2) +
geom_sf(data=calgary_Floods ,aes(fill=RANGE),size=0.5) +
scale_fill_manual(values = c("1"= "#1f78b4", "0" = "#e7f5c6"),
labels = c("1" = "Inundation", "0" = "No Inundation"),
name = "Inundation Status") +
labs(title="Past Flood Inundation in Calgary, Canada",
caption = "Figure 2.1")+
mapTheme+
guides(fill = guide_legend(override.aes = list(shape = 22, size = 6)))
# Creating tables to combine exploratory data
flood_dep <- inundation %>%
select(FID, RANGE) %>%
rename(flood = RANGE) %>%
mutate(flood = factor(flood))
# 1 = flood, 0 = no flood
#1 Elevation
elev_comb <- elevation %>%
select(FID, MEAN) %>%
rename(mean_elev= MEAN)
#2 Slope
slope_comb <- slope %>%
select(FID, MAX) %>%
rename(max_slope= MAX)
#3 Water body
water_comb <- water_body %>%
select(FID, MIN) %>%
rename(min_dist_water= MIN)
#4 Flow accumulation
fac_comb <-  flow_acc %>%
select(FID, MEAN) %>%
rename(mean_fac= MEAN)
#changed from max to mean
#5 Land Use/Permeability
lu_comb <- land_use %>%
select(FID, MEAN) %>%
rename(land_use = MEAN) %>%
mutate(permeability = case_when(
land_use < 0.25 ~ '0',
land_use >= 0.25 ~ '1')) %>%
select(-land_use)
# Removing unnecessary data sets
rm(inundation, elevation, flow_acc, land_use, slope, water_body)
# Combining the tables
flood_comb <- flood_dep %>%
inner_join(elev_comb, by = "FID") %>%
inner_join(slope_comb, by = "FID") %>%
inner_join(water_comb, by = "FID") %>%
inner_join(fac_comb, by = "FID")
floodPlotVariables <-
flood_comb %>%
as.data.frame() %>%
select(flood, mean_elev, max_slope, min_dist_water, mean_fac) %>%
gather(variable, value, -flood)
library(raster)
library(rgdal)
#Inundation Calgary
dependent <- raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/dependent.tif")
dependent_df <- as.data.frame(dependent, xy = TRUE)
fishnet_shp<- st_read("C:/Users/USER/Desktop/LandUseModeling/Assignment3/Calgary/fishnet_boundary.shp")
st_geometry_type(fishnet_shp)
calfishnet_shp <- st_zm(fishnet_shp, drop = TRUE)
clipped_depen <- mask(dependent,calfishnet_shp)
clip_df <-as.data.frame(clipped_depen, xy=TRUE)
library(viridis)
#Flow accumulation
calgary_fac<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/Calgary_fac.tif")
clipped_cal_fac <- mask(calgary_fac,calfishnet_shp)
cal_fac_df <-as.data.frame(clipped_cal_fac, xy=TRUE)
ggplot() +
geom_raster(data = cal_fac_df , aes(x = x, y = y, fill =Calgary_fac)) +
scale_fill_viridis_c(name = "Flow Accumulation", option = "inferno", na.value = "transparent",
limits = c(min(cal_fac_df$Calgary_fac, na.rm = TRUE), max(cal_fac_df$Calgary_fac, na.rm = TRUE) *1.01))+
coord_sf() +
labs(title = "Flood Accumulation in Calgary, Canada") +
mapTheme
#permeability
calgary_perme<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/calgary_perme.tif")
clipped_cal_perme <- mask(calgary_perme,calfishnet_shp)
cal_perme_df <-as.data.frame(clipped_cal_perme, xy=TRUE)
cal_perme_df$calgary_perme<-factor(cal_perme_df$calgary_perme)
ggplot() +
geom_raster(data = cal_perme_df, aes(x = x, y = y, fill = calgary_perme)) +
geom_tile() +
scale_fill_manual(values = c("1" = "#D3D3D3", "0" = "#00008B"),
labels = c("1" = "Impermeable", "0" = "Permeable"),
name = "Permeability Status",
na.value = "transparent") +
coord_sf() +
labs(title = "Permeability by Land Cover in Calgary,Canada") +
mapTheme
#Distance from water Body
calgary_water<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/calgary_water.tif")
clipped_cal_water <- mask(calgary_water,calfishnet_shp)
cal_water_df <-as.data.frame(clipped_cal_water, xy=TRUE)
ggplot() +
geom_raster(data = cal_water_df, aes(x = x, y = y, fill = calgary_water)) +
scale_fill_gradient(name = "Euclidean Distance",
low = "lightblue", high = "darkblue",
na.value = "transparent",
limits = c(NA, 4000)) +  # Explicitly set the upper limit to 4000
coord_sf() +
labs(title = "Distance from Water Body in Calgary, Canada") +
mapTheme
#slope
calgary_slope<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/calgary_slope.tif")
clipped_cal_slope <- mask(calgary_slope,calfishnet_shp)
cal_slope_df <-as.data.frame(clipped_cal_slope, xy=TRUE)
ggplot() +
geom_raster(data = cal_slope_df , aes(x = x, y = y, fill =calgary_slope)) +
scale_fill_gradient(name = "Slope",
low = "#FDE6CF", high = "#CC2D20",
na.value = "transparent",
limits = c(NA, 28)) +
coord_sf() +
labs(title = "Slope in Calgary, Canada") +
mapTheme
#Elevation
calgary_dem<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/calgary_dem.tif")
clipped_cal_dem <- mask(calgary_dem,calfishnet_shp)
cal_dem_df <-as.data.frame(clipped_cal_dem, xy=TRUE)
lowest_value <- 970
highest_value <- 1290
ggplot() +
geom_raster(data = cal_dem_df, aes(x = x, y = y, fill = calgary_dem)) +
scale_fill_viridis_c(name = "Elevation (m)",
na.value = "transparent",
limits = c(lowest_value, highest_value),
breaks = c(lowest_value, (lowest_value+highest_value)/2, highest_value),
labels = c(as.character(lowest_value), as.character((lowest_value+highest_value)/2), as.character(highest_value))) +
coord_sf() +
labs(title = "Elevation in Calgary, Canada") +
mapTheme
ggplot() +
geom_raster(data = cal_dem_df, aes(x = x, y = y, fill = calgary_dem)) +
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_viridis_c(name = "Elevation (m)", na.value = "transparent")+
coord_sf() +
labs(title = "Elevation in Calgary, Canada") +
mapTheme
## Denver Independent Maps
denver_fishnet<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Denver_JSON/denver_fishnet.json")
denver_boundary<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Denver_JSON/denver_boundary.json")
fishnet_shp_den<- st_read("C:/Users/USER/Desktop/LandUseModeling/Assignment3/Denver/denver_boundary.shp")
st_geometry_type(fishnet_shp_den)
denfishnet_shp <- st_zm(fishnet_shp_den, drop = TRUE)
#Flow Accumulation
den_fac<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/denver_rast/den_fac.tif")
clipped_den_fac <- mask(den_fac,denfishnet_shp )
den_fac_df <-as.data.frame(clipped_den_fac , xy=TRUE)
ggplot() +
geom_raster(data = den_fac_df , aes(x = x, y = y, fill =den_fac)) +
scale_fill_viridis_c(name = "Flow Accumulation", option = "inferno", na.value = "transparent",
limits = c(min(den_fac_df$den_fac, na.rm = TRUE), max(den_fac_df$den_fac, na.rm = TRUE) *1.01))+
coord_sf() +
labs(title = "Flood Accumulation in Denver, Colorado") +
mapTheme
#Permeability
den_perme<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/denver_rast/den_perme.tif")
clipped_den_perme <- mask(den_perme,denfishnet_shp)
den_perme_df <-as.data.frame(clipped_den_perme, xy=TRUE)
den_perme_df$den_perme<-factor(den_perme_df$den_perme)
ggplot() +
geom_raster(data = den_perme_df, aes(x = x, y = y, fill = den_perme)) +
geom_tile() +  # Use geom_tile for raster data
scale_fill_manual(values = c("1" = "#D3D3D3", "0" = "#00008B"),
labels = c("1" = "Impermeable", "0" = "Permeable"),
name = "Permeability Status",
na.value = "transparent") +
coord_sf() +  # Explicitly use spatial coordinates
labs(title = "Permeability by Land Cover in Denver, Colorado") +
mapTheme
#Distance from water Body
den_water<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/denver_rast/den_water.tif")
clipped_den_water <- mask(den_water,denfishnet_shp)
den_water_df <-as.data.frame(clipped_den_water, xy=TRUE)
ggplot() +
geom_raster(data = den_water_df , aes(x = x, y = y, fill = den_water)) +
scale_fill_gradient(name = "Euclidean Distance",
low = "lightblue", high = "darkblue",
na.value = "transparent",
limits = c(NA, 5000)) +
coord_sf() +
labs(title = "Distance from Water Body in Denver, Colorado") +
mapTheme
#Slope
denver_slope<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/denver_rast/den_slope.tif")
clipped_den_slope <- mask(denver_slope,denfishnet_shp)
den_slope_df <-as.data.frame(clipped_den_slope, xy=TRUE)
ggplot() +
geom_raster(data = den_slope_df , aes(x = x, y = y, fill =den_slope)) +
scale_fill_gradient(name = "Slope",
low = "#FDE6CF", high = "#CC2D20",
na.value = "transparent",
limits = c(NA, 45)) +
coord_sf() +
labs(title = "Slope in Denver, Colorado") +
mapTheme
#Elevation
den_dem<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/denver_rast/den_dem.tif")
clipped_den_dem <- mask(den_dem,denfishnet_shp)
den_dem_df <-as.data.frame(clipped_den_dem , xy=TRUE)
lowest_value_den <- 1551
highest_value_den <- 1754
ggplot() +
geom_raster(data = den_dem_df, aes(x = x, y = y, fill = den_dem)) +
geom_sf(data = denver_fishnet, color = "grey", fill = NA) +
scale_fill_viridis_c(name = "Elevation (m)",
na.value = "transparent",
limits = c(lowest_value_den, highest_value_den),
breaks = c(lowest_value_den, (lowest_value_den+highest_value_den)/2, highest_value_den),
labels = c(as.character(lowest_value_den), as.character((lowest_value_den+highest_value_den)/2), as.character(highest_value_den))) +
coord_sf() +
labs(title = "Elevation in Denver, Colorado") +
mapTheme
library(raster)
library(rgdal)
#Inundation Calgary
dependent <- raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/dependent.tif")
dependent_df <- as.data.frame(dependent, xy = TRUE)
fishnet_shp<- st_read("C:/Users/USER/Desktop/LandUseModeling/Assignment3/Calgary/fishnet_boundary.shp")
st_geometry_type(fishnet_shp)
calfishnet_shp <- st_zm(fishnet_shp, drop = TRUE)
clipped_depen <- mask(dependent,calfishnet_shp)
clip_df <-as.data.frame(clipped_depen, xy=TRUE)
library(viridis)
#Flow accumulation
calgary_fac<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/Calgary_fac.tif")
clipped_cal_fac <- mask(calgary_fac,calfishnet_shp)
cal_fac_df <-as.data.frame(clipped_cal_fac, xy=TRUE)
ggplot() +
geom_raster(data = cal_fac_df , aes(x = x, y = y, fill =Calgary_fac)) +
scale_fill_viridis_c(name = "Flow Accumulation", option = "inferno", na.value = "transparent",
limits = c(min(cal_fac_df$Calgary_fac, na.rm = TRUE), max(cal_fac_df$Calgary_fac, na.rm = TRUE) *1.01))+
coord_sf() +
labs(title = "Flood Accumulation in Calgary, Canada") +
mapTheme
#permeability
calgary_perme<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/calgary_perme.tif")
clipped_cal_perme <- mask(calgary_perme,calfishnet_shp)
cal_perme_df <-as.data.frame(clipped_cal_perme, xy=TRUE)
cal_perme_df$calgary_perme<-factor(cal_perme_df$calgary_perme)
ggplot() +
geom_raster(data = cal_perme_df, aes(x = x, y = y, fill = calgary_perme)) +
geom_tile() +
scale_fill_manual(values = c("1" = "#D3D3D3", "0" = "#00008B"),
labels = c("1" = "Impermeable", "0" = "Permeable"),
name = "Permeability Status",
na.value = "transparent") +
coord_sf() +
labs(title = "Permeability by Land Cover in Calgary,Canada") +
mapTheme
#Distance from water Body
calgary_water<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/calgary_water.tif")
clipped_cal_water <- mask(calgary_water,calfishnet_shp)
cal_water_df <-as.data.frame(clipped_cal_water, xy=TRUE)
ggplot() +
geom_raster(data = cal_water_df, aes(x = x, y = y, fill = calgary_water)) +
scale_fill_gradient(name = "Euclidean Distance",
low = "lightblue", high = "darkblue",
na.value = "transparent",
limits = c(NA, 4000)) +  # Explicitly set the upper limit to 4000
coord_sf() +
labs(title = "Distance from Water Body in Calgary, Canada") +
mapTheme
#slope
calgary_slope<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/calgary_slope.tif")
clipped_cal_slope <- mask(calgary_slope,calfishnet_shp)
cal_slope_df <-as.data.frame(clipped_cal_slope, xy=TRUE)
ggplot() +
geom_raster(data = cal_slope_df , aes(x = x, y = y, fill =calgary_slope)) +
scale_fill_gradient(name = "Slope",
low = "#FDE6CF", high = "#CC2D20",
na.value = "transparent",
limits = c(NA, 28)) +
coord_sf() +
labs(title = "Slope in Calgary, Canada") +
mapTheme
#Elevation
calgary_dem<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/calgary_dem.tif")
clipped_cal_dem <- mask(calgary_dem,calfishnet_shp)
cal_dem_df <-as.data.frame(clipped_cal_dem, xy=TRUE)
lowest_value <- 970
highest_value <- 1290
ggplot() +
geom_raster(data = cal_dem_df, aes(x = x, y = y, fill = calgary_dem)) +
scale_fill_viridis_c(name = "Elevation (m)",
na.value = "transparent",
limits = c(lowest_value, highest_value),
breaks = c(lowest_value, (lowest_value+highest_value)/2, highest_value),
labels = c(as.character(lowest_value), as.character((lowest_value+highest_value)/2), as.character(highest_value))) +
coord_sf() +
labs(title = "Elevation in Calgary, Canada") +
mapTheme
ggplot() +
geom_raster(data = cal_dem_df, aes(x = x, y = y, fill = calgary_dem)) +
scale_fill_viridis_c(name = "Elevation (m)", na.value = "transparent")+
coord_sf() +
labs(title = "Elevation in Calgary, Canada") +
mapTheme
## Denver Independent Maps
denver_fishnet<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Denver_JSON/denver_fishnet.json")
denver_boundary<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Denver_JSON/denver_boundary.json")
fishnet_shp_den<- st_read("C:/Users/USER/Desktop/LandUseModeling/Assignment3/Denver/denver_boundary.shp")
st_geometry_type(fishnet_shp_den)
denfishnet_shp <- st_zm(fishnet_shp_den, drop = TRUE)
#Flow Accumulation
den_fac<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/denver_rast/den_fac.tif")
clipped_den_fac <- mask(den_fac,denfishnet_shp )
den_fac_df <-as.data.frame(clipped_den_fac , xy=TRUE)
ggplot() +
geom_raster(data = den_fac_df , aes(x = x, y = y, fill =den_fac)) +
scale_fill_viridis_c(name = "Flow Accumulation", option = "inferno", na.value = "transparent",
limits = c(min(den_fac_df$den_fac, na.rm = TRUE), max(den_fac_df$den_fac, na.rm = TRUE) *1.01))+
coord_sf() +
labs(title = "Flood Accumulation in Denver, Colorado") +
mapTheme
#Permeability
den_perme<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/denver_rast/den_perme.tif")
clipped_den_perme <- mask(den_perme,denfishnet_shp)
den_perme_df <-as.data.frame(clipped_den_perme, xy=TRUE)
den_perme_df$den_perme<-factor(den_perme_df$den_perme)
ggplot() +
geom_raster(data = den_perme_df, aes(x = x, y = y, fill = den_perme)) +
geom_tile() +  # Use geom_tile for raster data
scale_fill_manual(values = c("1" = "#D3D3D3", "0" = "#00008B"),
labels = c("1" = "Impermeable", "0" = "Permeable"),
name = "Permeability Status",
na.value = "transparent") +
coord_sf() +  # Explicitly use spatial coordinates
labs(title = "Permeability by Land Cover in Denver, Colorado") +
mapTheme
#Distance from water Body
den_water<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/denver_rast/den_water.tif")
clipped_den_water <- mask(den_water,denfishnet_shp)
den_water_df <-as.data.frame(clipped_den_water, xy=TRUE)
ggplot() +
geom_raster(data = den_water_df , aes(x = x, y = y, fill = den_water)) +
scale_fill_gradient(name = "Euclidean Distance",
low = "lightblue", high = "darkblue",
na.value = "transparent",
limits = c(NA, 5000)) +
coord_sf() +
labs(title = "Distance from Water Body in Denver, Colorado") +
mapTheme
#Slope
denver_slope<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/denver_rast/den_slope.tif")
clipped_den_slope <- mask(denver_slope,denfishnet_shp)
den_slope_df <-as.data.frame(clipped_den_slope, xy=TRUE)
ggplot() +
geom_raster(data = den_slope_df , aes(x = x, y = y, fill =den_slope)) +
scale_fill_gradient(name = "Slope",
low = "#FDE6CF", high = "#CC2D20",
na.value = "transparent",
limits = c(NA, 45)) +
coord_sf() +
labs(title = "Slope in Denver, Colorado") +
mapTheme
#Elevation
den_dem<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/denver_rast/den_dem.tif")
clipped_den_dem <- mask(den_dem,denfishnet_shp)
den_dem_df <-as.data.frame(clipped_den_dem , xy=TRUE)
lowest_value_den <- 1551
highest_value_den <- 1754
ggplot() +
geom_raster(data = den_dem_df, aes(x = x, y = y, fill = den_dem)) +
scale_fill_viridis_c(name = "Elevation (m)",
na.value = "transparent",
limits = c(lowest_value_den, highest_value_den),
breaks = c(lowest_value_den, (lowest_value_den+highest_value_den)/2, highest_value_den),
labels = c(as.character(lowest_value_den), as.character((lowest_value_den+highest_value_den)/2), as.character(highest_value_den))) +
coord_sf() +
labs(title = "Elevation in Denver, Colorado") +
mapTheme
>>>>>>> Stashed changes
# need to check the labels for flood and not flood
ggplot(floodPlotVariables %>%
group_by(flood, variable) %>%
summarize(mean = mean(value))) +
geom_bar(aes(as.factor(flood),
mean,
fill=as.factor(flood)),
stat="identity") +
facet_wrap(~variable, scales = "free_y") +
scale_fill_manual(values = c("#e7f5c6", "#1f78b4"),
labels = c("No Flood","Flood"),
name = "") +
labs(title="Continuous Variables Impacting Flood Risk",
caption = "Figure 2.2")+
labs(x="Flood", y="Value") +
plotTheme
# need to check the labels for flood and not flood
ggplot(floodPlotVariables %>%
group_by(flood, variable) %>%
summarize(mean = mean(value))) +
geom_bar(aes(as.factor(flood),
mean,
fill=as.factor(flood)),
stat="identity") +
facet_wrap(~variable, scales = "free_y") +
scale_fill_manual(values = c("#e7f5c6", "#1f78b4"),
labels = c("No Flood","Flood"),
name = "") +
labs(title="Continuous Variables Impacting Flood Risk",
caption = "Figure 2.2")+
labs(x="Flood", y="Value") +
plotTheme
# Combine all data sets for model building
model_data <- flood_dep %>%
inner_join(elev_comb, by = "FID") %>%
inner_join(slope_comb, by = "FID") %>%
inner_join(water_comb, by = "FID") %>%
inner_join(fac_comb, by = "FID") %>%
inner_join(lu_comb, by = "FID") %>%
mutate(permeability = as.factor(permeability))
#land cover is dummy var and categorical var
# Creating training and test sets
set.seed(3456)
trainIndex <- createDataPartition(model_data$permeability, p = .70,
list = FALSE,
times = 1)
floodTrain <- model_data[ trainIndex,]
floodTest  <- model_data[-trainIndex,]
floodModel <- glm(flood ~ .,
family="binomial"(link="logit"), data = floodTrain %>%
as.data.frame() %>%
select(-FID))
<<<<<<< Updated upstream
summary(floodModel)
classProbs <- predict(floodModel, floodTest, type="response")
hist(classProbs, col = "#1f78b4", main = "Histogram of Flood Probabilities")
testProbs <- data.frame(obs = as.factor(floodTest$flood),
pred = classProbs)
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) +
geom_density() +
facet_grid(obs ~ .) +
xlab("Probability") +
ylab("Frequency")+
geom_vline(xintercept = .5) +
labs(title="Model Validation",
caption = "Figure 3.2")+
scale_fill_manual(values = c("#e7f5c6", "#1f78b4"),
labels = c("Not Flood","Flood"),
name = "")+
plotTheme
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) +
geom_density() +
facet_grid(obs ~ .) +
xlab("Probability") +
ylab("Frequency")+
geom_vline(xintercept = .5) +
labs(title="Distribution of Predicted Probabilities by Observed Outcome",
caption = "Figure 3.2")+
scale_fill_manual(values = c("#e7f5c6", "#1f78b4"),
labels = c("Not Flood","Flood"),
name = "")+
plotTheme
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) +
geom_density() +
facet_grid(obs ~ .) +
xlab("Probability") +
ylab("Frequency")+
geom_vline(xintercept = .5) +
labs(title="Distribution of Predicted Probabilities by Observed Outcome",
caption = "Figure 3.2")+
scale_fill_manual(values = c("#e7f5c6", "#1f78b4"),
labels = c("No Flood","Flood"),
name = "")+
plotTheme
testProbs$predClass  = ifelse(testProbs$pred > .5 ,1,0)
caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
ctrl <- trainControl(method = "cv",
number = 100,
p = 0.7,
savePredictions = TRUE)
cvFit <- train(as.factor(flood) ~ .,  data = model_data %>%
as.data.frame(),
method="glm", family="binomial",
trControl = ctrl)
cvFit
hist(classProbs, col = "#1f78b4", main = "Histogram of Flood Probabilities")
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) +
geom_density() +
facet_grid(obs ~ .) +
xlab("Probability") +
ylab("Frequency")+
geom_vline(xintercept = .5) +
labs(title="Distribution of Predicted Probabilities by Observed Outcome",
caption = "Figure 3.1")+
scale_fill_manual(values = c("#e7f5c6", "#1f78b4"),
labels = c("No Flood","Flood"),
name = "")+
plotTheme
# change obs to numeric
testProbs$obs <- as.numeric(as.character(testProbs$obs))
# plot results
ggplot(testProbs, aes(d = obs, m = pred)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
labs(title="ROC Curve",
caption = "Figure 3.3") +
plotTheme
# plot results
ggplot(testProbs, aes(d = obs, m = pred)) +
geom_roc(n.cuts = 50, labels = FALSE) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
labs(title="ROC Curve",
caption = "Figure 3.3") +
plotTheme
style_roc(theme = theme_grey) +
# plot results
ggplot(testProbs, aes(d = obs, m = pred)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
labs(title="ROC Curve",
caption = "Figure 3.3") +
plotTheme
# plot results
ggplot(testProbs, aes(d = obs, m = pred)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
labs(title="ROC Curve",
caption = "Figure 3.3") +
plotTheme
# plot results
ggplot(testProbs, aes(d = obs, m = pred)) +
geom_roc(n.cuts = 50, labels = FALSE) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
labs(title="ROC Curve",
caption = "Figure 3.3") +
plotTheme
# plot results
ggplot(testProbs, aes(d = obs, m = pred)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
labs(title="ROC Curve",
caption = "Figure 3.3") +
plotTheme
ctrl <- trainControl(method = "cv",
number = 100,
p = 0.7,
savePredictions = TRUE)
cvFit <- train(as.factor(flood) ~ .,  data = model_data %>%
as.data.frame(),
method="glm", family="binomial",
trControl = ctrl)
cvFit
ggplot(as.data.frame(cvFit$resample), aes(Accuracy)) +
geom_histogram(fill = "#1f78b4", color = "black") +
scale_x_continuous(limits = c(0, 1)) +
labs(x="Accuracy",
y="Count") +
labs(title="Cross-Validation",
caption = "Figure 3.3")+
plotTheme
ggplot(as.data.frame(cvFit$resample), aes(Accuracy)) +
geom_histogram(fill = "#1f78b4", color = "black") +
scale_x_continuous(limits = c(0, 1)) +
labs(x="Accuracy",
y="Count") +
labs(title="100-Fold Cross-Validation",
caption = "Figure 3.3")+
plotTheme
allPredictions <-
predict(cvFit, model_data, type="prob")[,2]
finalflood <-
cbind(model_data,allPredictions) %>%
mutate(allPredictions = round(allPredictions * 100))
joined_fishnet_cal <- calgary_fishnet %>%
left_join(finalflood, by = "FID")
ggplot() +
geom_sf(data=joined_fishnet_cal, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +  # Raster layer
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_manual(values = c("#eff3ff", "#bdd7e7", "#bcaecc", "#5a4565", "#3e204f"),
labels=as.character(quantile(joined_fishnet_cal$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Calgary, Canada")
ggplot() +
geom_sf(data=joined_fishnet_cal, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +  # Raster layer
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_manual(values = c("#eff3ff", "#bdd7e7", "#bcaecc", "#5a4565", "#3e204f"),
labels=as.character(quantile(joined_fishnet_cal$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Calgary, Canada",
caption = "Figure 3.4")
ggplot() +
geom_sf(data=joined_fishnet_cal, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +
scale_fill_manual(values = c("#eff3ff", "#bdd7e7", "#bcaecc", "#5a4565", "#3e204f"),
labels=as.character(quantile(joined_fishnet_cal$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=joined_fishnet_cal  %>%
filter(flood == 1),
fill="#de2d26",colour=NA) +
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
mapTheme +
labs(title="Predicted Probabilities and Past Flood Inundation",
subtitle="Calgary; Past Flood Inundation in red",
caption = "Figure 3.5")
##Confusion Matrix Map
joined_fishnet_cal %>%
mutate(confResult=case_when(allPredictions < 50 & flood==0 ~ "True Negative",
allPredictions >= 50 & flood==1 ~ "True Positive",
allPredictions < 50 & flood==1 ~ "False Negative",
allPredictions >= 50 & flood==0 ~ "False Positive")) %>%
ggplot()+
geom_sf(aes(fill = confResult), color = "transparent")+
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_manual(values = c("Red","Orange","Light Blue","Light Green"),
name="Outcomes")+
labs(title="Confusion Matrix Map") +
mapTheme
##Confusion Matrix Map
joined_fishnet_cal %>%
mutate(confResult=case_when(allPredictions < 50 & flood==0 ~ "True Negative",
allPredictions >= 50 & flood==1 ~ "True Positive",
allPredictions < 50 & flood==1 ~ "False Negative",
allPredictions >= 50 & flood==0 ~ "False Positive")) %>%
ggplot()+
geom_sf(aes(fill = confResult), color = "transparent")+
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_manual(values = c("Red","Orange","Light Blue","Light Green"),
name="Outcomes")+
labs(title="Confusion Matrix Map") +
mapTheme
ggplot() +
geom_sf(data=joined_fishnet_cal, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +
scale_fill_manual(values = c("#eff3ff", "#bdd7e7", "#bcaecc", "#5a4565", "#3e204f"),
labels=as.character(quantile(joined_fishnet_cal$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=joined_fishnet_cal  %>%
filter(flood == 1),
fill="#de2d26",colour=NA) +
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
mapTheme +
labs(title="Predicted Probabilities and Past Flood Inundation",
subtitle="Calgary; Past Flood Inundation in red",
caption = "Figure 4.2")
ggplot() +
geom_sf(data=joined_fishnet_cal, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +  # Raster layer
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_manual(values = c("#eff3ff", "#bdd7e7", "#bcaecc", "#5a4565", "#3e204f"),
labels=as.character(quantile(joined_fishnet_cal$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Calgary, Canada",
caption = "Figure 4.1")
ggplot() +
geom_sf(data=joined_fishnet_cal, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +  # Raster layer
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_manual(values = c("#eff3ff", "#bdd7e7", "#bcaecc", "#5a4565", "#3e204f"),
labels=as.character(quantile(joined_fishnet_cal$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Calgary, Canada",
caption = "Figure 4.1")
ggplot() +
geom_sf(data=joined_fishnet_cal, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +
scale_fill_manual(values = c("#eff3ff", "#bdd7e7", "#bcaecc", "#5a4565", "#3e204f"),
labels=as.character(quantile(joined_fishnet_cal$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=joined_fishnet_cal  %>%
filter(flood == 1),
fill="#de2d26",colour=NA) +
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
mapTheme +
labs(title="Predicted Probabilities and Past Flood Inundation",
subtitle="Calgary; Past Flood Inundation in red",
caption = "Figure 4.2")
##Confusion Matrix Map
joined_fishnet_cal %>%
mutate(confResult=case_when(allPredictions < 50 & flood==0 ~ "True Negative",
allPredictions >= 50 & flood==1 ~ "True Positive",
allPredictions < 50 & flood==1 ~ "False Negative",
allPredictions >= 50 & flood==0 ~ "False Positive")) %>%
ggplot()+
geom_sf(aes(fill = confResult), color = "transparent")+
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_manual(values = c("Red","Orange","Light Blue","Light Green"),
name="Outcomes")+
labs(title="Confusion Matrix Map",
caption = "Figure 4.3") +
mapTheme
>>>>>>> 75b1c4b0033f6302d7cb1081e1a0720bb886ca35
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(pscl)
library(plotROC)
library(pROC)
library(sf)
library(tidyverse)
library(knitr)
library(kableExtra)
library(tigris)
library(viridis)
library(ggplot2)
mapTheme <- theme(plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_line(colour = 'transparent'),
panel.grid.minor=element_blank(),
legend.direction = "vertical",
legend.position = "right",
plot.margin = margin(1, 1, 1, 1, 'cm'),
legend.key.height = unit(1, "cm"), legend.key.width = unit(0.2, "cm"))
plotTheme <- theme(
plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
# Set the entire chart region to blank
panel.background=element_blank(),
plot.background=element_blank(),
#panel.border=element_rect(colour="#F0F0F0"),
# Format the grid
panel.grid.major=element_line(colour="#D0D0D0",size=.75),
axis.ticks=element_blank())
# dependent variable
inundation <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_depe.csv")
# independent variables
elevation <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_elev.csv")
flow_acc <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_fac.csv")
land_use <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_lulc.csv")
slope <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_slope.csv")
water_body <- read.csv("https://raw.githubusercontent.com/luyiiw/LUEM/main/calgary_table/zonal_water.csv")
calgary_fishnet<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Calgary_JSON/Calgary_Fishnet.json")
calgary_boundary<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Calgary_JSON/Calgary_Boundary.json")
calgary_Floods <- calgary_fishnet %>%
left_join(inundation, by = "FID")
calgary_Floods$RANGE<-as.factor(calgary_Floods$RANGE)
ggplot() +
geom_sf(data=calgary_fishnet,color="grey",size=0.2) +
geom_sf(data=calgary_Floods ,aes(fill=RANGE),size=0.5) +
scale_fill_manual(values = c("1"= "#1f78b4", "0" = "#e7f5c6"),
labels = c("1" = "Inundation", "0" = "No Inundation"),
name = "Inundation Status") +
labs(title="Past Flood Inundation in Calgary, Canada",
caption = "Figure 2.1")+
mapTheme+
guides(fill = guide_legend(override.aes = list(shape = 22, size = 6)))
# Creating tables to combine exploratory data
flood_dep <- inundation %>%
select(FID, RANGE) %>%
rename(flood = RANGE) %>%
mutate(flood = factor(flood))
# 1 = flood, 0 = no flood
#1 Elevation
elev_comb <- elevation %>%
select(FID, MEAN) %>%
rename(mean_elev= MEAN)
#2 Slope
slope_comb <- slope %>%
select(FID, MAX) %>%
rename(max_slope= MAX)
#3 Water body
water_comb <- water_body %>%
select(FID, MIN) %>%
rename(min_dist_water= MIN)
#4 Flow accumulation
fac_comb <-  flow_acc %>%
select(FID, MEAN) %>%
rename(mean_fac= MEAN)
#changed from max to mean
#5 Land Use/Permeability
lu_comb <- land_use %>%
select(FID, MEAN) %>%
rename(land_use = MEAN) %>%
mutate(permeability = case_when(
land_use < 0.25 ~ '0',
land_use >= 0.25 ~ '1')) %>%
select(-land_use)
# Removing unnecessary data sets
rm(inundation, elevation, flow_acc, land_use, slope, water_body)
# Combining the tables
flood_comb <- flood_dep %>%
inner_join(elev_comb, by = "FID") %>%
inner_join(slope_comb, by = "FID") %>%
inner_join(water_comb, by = "FID") %>%
inner_join(fac_comb, by = "FID")
floodPlotVariables <-
flood_comb %>%
as.data.frame() %>%
select(flood, mean_elev, max_slope, min_dist_water, mean_fac) %>%
gather(variable, value, -flood)
#Inundation Calgary
dependent <- raster("/Users/luyiiwong/Documents/Land Use & Environmental Modeling/Assignment3/calgary_raster/dependent.tif")
library(raster)
library(rgdal)
install.packages(raster)
install.packages("raster")
install.packages("raster")
install.packages("rgdal")
#Inundation Calgary
dependent <- raster("/Users/luyiiwong/Documents/Land Use & Environmental Modeling/Assignment3/calgary_raster/dependent.tif")
library(raster)
library(rgdal)
=======
>>>>>>> Stashed changes
